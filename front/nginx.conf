server {
    listen 80;
    listen [::]:80;

    server_name    localhost;
    server_tokens  off;

    access_log   /logs/access.log;
    error_log   /logs/error.log ;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /graphql {
        # proxy_pass   http://api:3000/graphql;
        # proxy_ssl_server_name on;
        proxy_pass  http://$RENDER_APP_BACKEND_HOSTPORT/graphql; # REMINDER: ENV VAR SHOULD CONSIST OF HTTPS://
        proxy_pass_header  Authorization;
        proxy_http_version 1.1;
        # proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Pragma "no-cache";
    }

    location /uploads {
        # proxy_pass   http://api:3000/uploads;
        # proxy_ssl_server_name on;
        proxy_pass  http://$RENDER_APP_BACKEND_HOSTPORT/uploads; # REMINDER: ENV VAR SHOULD CONSIST OF HTTPS://
        proxy_http_version 1.1;
        # proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Pragma "no-cache";
    }

    location /pad/ {
        # proxy_pass   http://hedgedoc:3000/;
        # proxy_ssl_server_name on;
        proxy_pass  http://$RENDER_APP_PAD_HOSTPORT/; # REMINDER: ENV VAR SHOULD CONSIST OF HTTPS://
        proxy_http_version 1.1;
        # proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Pragma "no-cache";
    }
}